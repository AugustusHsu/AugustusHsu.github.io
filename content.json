{"pages":[{"title":"about","text":"Strike the iron while it is hot.","link":"/about/index.html"}],"posts":[{"title":"hexo系列-00 hexo簡介＆環境安裝","text":"A fast, simple &amp; powerful blog framework 前言一直以來就有想要架設個人網站的想法，之前在學寫HTML的時候，有試過用github.io的功能，他可以直接把你寫的網頁直接呈現在外部ip。(在大學的時候有想過用這個功能把專題直接讓每個人玩，不過後來發現，他只能用靜態網頁所以後來就不了了之。) 身為一個懶惰又想要讓自己的網站很炫能看的資訊工程學生，在一看到hexo這個工具，就立刻架設了一個範本，也就是現在你所看到的這個網站，經過研究一段時間後發現，架設這個網站只需要簡單的幾個指令就可以完成，基本上不需要資訊工程或是有編程經驗的背景就可以使用了。 不過要注意的是hexo是一個基於Node.js的靜態blog工具，可以很方便的將生成的網頁直接放在Github上面，不過要注意的是他跟基於PHP的WordPress不一樣，如果你想搭建功能比較複雜的網頁或是WebAPP的話，還是採用動態網站比較好。 之後會慢慢的完善這個網頁，接下來就直接開始介紹怎麼使用hexo這個工具吧～ 環境安裝、配置NodeJS/NPMNodeJS是能夠在電腦運行JavaScript的開放原始碼，幾本上所有在寫前端的程序猿都會需要使用，安裝方法很簡單，去NodeJS官方網站下載一個LTS的版本就可以了，如果你電腦安裝過了就可以直接跳過。 有許多人在JavaScript上發佈、使用許多模塊，要調用也十分容易，其中NPM是最有名的社群，也是國際上最為流行的Node模塊管理工具，現在的NodeJS已經集成了NPM，所以不需要再去安裝。 Git/Github去Git官網下載和自己作業系統相對應的安裝包，另外如果沒有Github帳戶的人也需要去申請一個。 另外要記得設定全局變量還有ssh-key 1git config --global user.name \"Your Github username\"2git config --global user.email \"Your Github mail address\"3ssh-keygen -t rsa -C \"Your Github mail address\" 然後可以在家目錄~/裡面看到.ssh文件夾，在裡面會有id_rsa.pub這個檔案，可以使用pbcopy這個指令來複製key。 1pbcopy &lt; ~/.ssh/id_rsa.pub 然後到Github SSH and GPG keys新增你的key，標題隨意打一個就行，新增完後以後要發文就不需要再輸入Github的密碼了。 Hexohexo可以直接使用npm來進行安裝： 1npm install hexo-cli -g 到這邊基本的環境就算安裝完成。 進入你要創建hexo的目錄(建議創建的目錄為XXX.github.io)，接下來初始化hexo的環境： 1hexo init XXX.github.io2cd XXX.github.io3npm install4hexo server 到這個步驟你就可以直接用瀏覽器打開localhost:4000(默認的port，也可以用hexo server -p XXXX來指定你的連接埠)，預設的主題是landscape。 到這裡你就可以開始使用你個人的blog了，下一篇會介紹如何更改主題、上傳到Github Page等等。 Hexo建置在使用的hexo之前，我想各位都已經找到自己感興趣的網站樣板了吧？！(至少我是XD) 如果還沒有開始找想要的樣板也沒關係，這裏列出了很多不同的樣板可以去參考看看。 主題安裝這裡我挑選的是Icarus作為我的主題，然後直接在~/XXX.github.io這個目錄下面輸入： 1git clone https://github.com/ppoffice/hexo-theme-icarus.git themes/icarus 這樣就可以直接把主題安裝到目錄中的themes資料夾了。 如果在這之前你是使用過hexo的人要轉換主題，你要先執行： 1hexo clean 清除之前主題渲染過內容的檔案，再重新渲染一次才不會有問題。 設置文件在執行完上面步驟之後，你會在資料夾發現兩個_config.yml，一個在XXX.github.io資料夾內，另一個在剛剛下載的主題內。 接下來將XXX.github.io內的_config.yml打開，將theme改寫成你主題的名字： 1theme: icarus 接著執行選染的指令： 1hexo generate2hexo g #簡寫當然也是可以的 最後就可以在瀏覽器看結果囉～ 1hexo server 預設地址為：http://localhost:4000 新增貼文接下來是新增貼文，在目錄中使用下面這個指令就可以新增貼文了： 1hexo new post 'title' 然後在XXX.github.io/source/_posts/這資料夾內就會看到剛剛新增的title.md檔案，文章標題默認會和檔案名稱一樣，打開這個md檔長得像這樣： 1---2title: title3date: 2019-12-10 15:05:404tags:5--- 這邊就是單純的Markdown語法，無須多說。不過在頂部的設定區有一些有趣的選項，譬如tag, categories, thumbnail, toc，其中thumbnail和toc分別代表的是縮圖跟目錄，可以用以下的方式設定： 1---2title: title3date: 2019-12-10 15:05:404tags: [A,B]5categories: C6thumbnail: /uploads/YourImage.JPG7toc: true8--- 這邊要注意的是圖片的位置，這邊個人建議是在XXX.github.io/public/裡面新增一個資料夾叫做uploads，之後你文章中所使用的任何圖片都可以上傳到這裡在用/uploads/YourImage.JPG的方式指定到目標位置。 當然如果你要建立子資料夾來管理圖片也是可以的，之後文章會介紹post_asset_folder讓圖片可以放在_posts裡面，用文章的名稱來管理用到的圖片。 上傳到Github前面有申請過Github的帳戶，現在我們要將網站發佈在Github Page上面，首先要做的是打開XXX.github.io下的_config.yml檔案，找到Deployment將其改成像下面這段： 1# Deployment2## Docs: https://hexo.io/docs/deployment.html3deploy:4 type: 'git'5 repo: https://github.com/YourAccount/XXX.github.io.git6 branch: master7 message: 變更成你的配置，不過不建議在message加上內容，我們可以在後面加上message的訊息，記得要先generate才可以上傳到你的Github帳戶： 1hexo generate2hexo depoly -m \"github message\" 建議在這裡加上附註，因為可以使用一些git的技巧，直接在-m後面加上要傳上去的附註，當然也可以將上傳的時間點加在附註上面，像是這樣的形式： 1hexo d -m \"Site updated: `date +'%Y-%m-%d %H:%M:%S'`\" 結語以上就是關於hexo的基本操作方式，接下來會針對_config.yml檔案裡面的參數去做介紹。","link":"/2019/12/09/hexo-00/"},{"title":"hexo系列-01 hexo簡單配置","text":"theme下的_config.yml前面有介紹過hexo在生成主題之後會有兩個_config.yml，這邊著重介紹在theme中的設定(絕對不是hexo原生的_config.yml沒什麼好介紹的) favicon&amp;logo首先就是favorites icon和logo~ 你可以在_config.yml裡面找到： 1# Path or URL to the website's icon23favicon: /images/favicon.png45# Path or URL to the website's logo to be shown on the left of the navigation bar or footer67logo: /images/logo.png 然後打開你的目錄XXX.github.io/public/images/裡面找到相對應的圖檔，間單的替換+更改檔名就可以放上你想要的圖片囉～ share分享的方式Icarus提供了許多方式，預設是： 1# Share2share: default # options: jiathis, bdshare, addtoany, default 這邊我使用的是AddThis在連結中註冊帳戶，他可以透過google, Facebook或是Twitter註冊帳戶，這個網站不只有分享按鈕的JavaScript，詳細功能可以自行去探索，設定好後會得到像是這樣的code 1//s7.addthis.com/js/300/addthis_widget.js#pubid=xxxxxxxx 將share那段替換成： 1# Share2share:3 type: addthis4 install_url: //s7.addthis.com/js/300/addthis_widget.js#pubid=xxxxxxxx # (required) 如此就可以直接在你的post上面看到我頁面上的分享按鈕了～ Donate當你建置好你的網站後你可能會發現下面這樣的狀況： 這是因為你在Donate的選項中沒有設置完全，直接把它註解掉就可以解決這個問題了。 1# donate:2 # -3 # # Donation entry name4 # type: alipay5 # # Qrcode image URL6 # qrcode: ''7 # -8 # # Donation entry name9 # type: wechat10 # # Qrcode image URL11 # qrcode: ''12 # -13 # # Donation entry name14 # type: paypal15 # # Paypal business ID or email address16 # business: 'V6DFAWSEDJJHE'17 # # Currency code18 # currency_code: U19 # -20 # # Donation entry name21 # type: patreon22 # # URL to the Patreon page23 # url: '' 當然如果你要設置Donate的帳戶也完全沒問題😜 highlight接著是highlight選項，這個是程式碼區塊的顯示格式，可以透過這裡去預覽、這裡去下載。 簡單的將highlight名稱替換成你想要的樣板名稱就可以裡： 1# Code highlight settings2highlight: 3 # Code highlight themes4 # https://github.com/highlightjs/highlight.js/tree/master/src/styles5 theme: zenburn6 # Show code copying button7 clipboard: true8 # Default folding status of the code blocks. Can be \"\", \"folded\", \"unfolded\"9 fold: unfolded 這裏我選擇的是zenburn，理由就是我覺得好看這個暗色主題黑的剛剛好，不會想其他主題一樣太黑，或者是不夠黑。 widgets這個選項就是調整你在頁面上所看到所有一塊塊區域的內容跟功能，第一個區塊就是網頁簡單名片： 在_config.yml的widgets第一個區塊就是相關的設定，包含像是位置、作者、還有圖片等等。在預設中沒有的是Envelope選項，也就是上面那張圖的右下角，可以通過更改social_links來將你的信箱新增上去： 1social_links:2 Github:3 icon: fab fa-github4 url: 'https://github.com/AugustusHsu'5 Facebook:6 icon: fab fa-facebook7 url: 'https://www.facebook.com/HsuAugustus'8 Envelope:9 icon: fas fa-envelope10 url: mailto:jimhsu11@gmail.com 這樣設置後，只要點擊你的信箱那個圖示，電腦會自動跳到寫信的應用程式(不過這年代還有誰會用Email來寫信😆) 其他功能我都是使用預設選項，當然其中會有像是： 1position: left 這樣的選項，你可以自行調整要放在左右那一邊，當然你也可以直接註解掉整塊來取消這個功能。 Image管理在Hexo你的發文可以透過MarkDown語法來編寫，所以在引用圖片的時候是可以透過第三方的網站來上傳圖片，再利用： 1！[title](image link) 來展示你的圖片，那如果想要將圖片放在你的網頁資料夾中的話，要怎麼引用呢？ hexo-asset-image這邊可以直接安裝這個插件，在新增貼文的時候會同時產生一個同名的資料夾，把圖片丟進資料夾再飲用就可以了。 在XXX.github.io資料夾輸入以下命令： 1npm install hexo-asset-image --save 另外在XXX.github.io中的_config.yml： 1post_asset_folder: true 將它改成true，這樣在新增貼文的時候就會自動產生同名的資料夾了。 實際運用如果你的圖片放在同名資料夾的話，在文章中要引用圖片的話，要像下面這個例子一樣： 1！[title](image_name.jpg) 無需加上資料夾的名稱，直接打你的圖片檔名就可以引用了。 不過這邊要注意的是如果你這樣打，在MarkDown編輯器中，你圖片會看不到，還有如果你是一邊啟動hexo server在編輯的話，你在網頁上圖片也是會顯示不出來，要執行過一次： 1hexo g 才能正常的在localhost:4000中看到圖片。 留言設置文章當然免不了討論問題，那在文章底部新增一個互動機制也就是留言功能，就在所難免。 在這個留言設置中，我只舉出兩種我有實際操作過的方法，其他像是gitment在Icarus列出的方法就請有興趣的朋友自行研究了。 gitalkgitalk是使用github上面的issue功能實現的留言討論功能，所以要跟github做連結。 OAuth OAuth是一個開放標準，允許用戶讓第三方應用存取該用戶在某一網站上儲存的私密的資源，而無需將用戶名稱和密碼提供給第三方應用。 –Wiki 也就是要授權github來儲存對話紀錄，點擊這裡來申請一個OAuth 其中Homepage URL跟Authorization callback URL請填你github.io的網址，name就簡單填個就行。 申請完會得到Client ID跟Client Secret將這兩項填入： 1comment:2 type: gitalk3 owner: xxxxxxxx # (required) GitHub user name4 repo: xxxxxxxx # (required) GitHub repository name5 client_id: xxxxxxxx # (required) OAuth application client id6 client_secret: xxxxxxxx # (required) OAuth application client secret7 admin: xxxxxxxx # (required) GitHub repo owner and collaborators who can initialize github issues8 # Can either be a string or an array.9 # admin:10 # - xxxxxx111 # - xxxxxx2 owner跟admin就直接填你github帳戶名稱就行。 一開始你可能會遇到像是這樣： 這時候直接按下去就會要你去登入並授權這個應用功能： 結束後你就可以在文章下方看到跟我一樣的留言區塊了。 facebookfacebook的話比較簡單，不過我之前有遇到過他的寬度不太合的狀況，所以比較推薦使用gitalk的方式來增加留言功能。 facebook的方式一樣要先授權，所以點這裡將你github.io的網址填入，接著按下取得程式碼就可以了。 再來要在_config.yml裡面把comment的設定更改成facebook: 1comment:2 type: facebook 這樣就設定完成了。 補充你在首頁看到我的文章會看到Read More這個框框，這個是MarkDown的語法，直接在你想隱藏的段落前加上： 1&lt;!--more--&gt; 就可以摺疊你的貼文了。","link":"/2019/12/09/hexo-01/"}],"tags":[{"name":"hexo","slug":"hexo","link":"/tags/hexo/"}],"categories":[{"name":"hexo","slug":"hexo","link":"/categories/hexo/"}]}